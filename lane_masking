import cv2
import numpy as np

def interested_region(image, region_pts):
    #we are going to convert the region not interested with black(0).
    mask = np.zeros_like(image) #mask is going to have exact same dimensions like image)

    #the region of interest is the lower triangle, we will represent it by white pixels(255)
    cv2.fillPoly(mask, region_pts, 255)

    #we want to keep the area of image with white color.
    masked_image = cv2.bitwise_and(image, mask)
    return masked_image


def get_detectframe(image):
    (height, width) = (image.shape[0], image.shape[1])
    #turn the image to grayscale
    gray_image = cv2.cvtColor(image, cv2.COLOR_BGR2GRAY)
    canny_image = cv2.Canny(gray_image, 100, 120)

    #we are interested in lower region of image only
    interested_vertices = [(0, height), (width/2, height*0.65), (width, height)]

    #we just keep lower triangle region to get rid of un-relevant image
    #here we are converting interested vertices to np.array
    cropped_image = interested_region(canny_image, np.array([interested_vertices], np.int32))
    return cropped_image

#what is video?
#several frames one after other
vid = cv2.VideoCapture('samplelane.mp4')

while(vid.isOpened()):
    ret, frame = vid.read()
    if(ret==True):
        frame = get_detectframe(frame)

        cv2.imshow('cv', frame)
        if(cv2.waitKey(20)==27):
            break

vid.release()
cv2.destroyAllWindows()
